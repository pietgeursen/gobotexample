// generated by collection-wrapper -- DO NOT EDIT
package gobotexample

import (
  "fmt"
  "encoding/json"
)


type RecipientsCollection struct {
  s []*Recipients
}

func NewRecipientsCollection() *RecipientsCollection {
  return &RecipientsCollection{}
}

func (v *RecipientsCollection) Clear() {
  v.s = v.s[:0]
}

func (v *RecipientsCollection) Equal(rhs *RecipientsCollection) bool {
  if rhs == nil {
    return false
  }

  if len(v.s) != len(rhs.s) {
    return false
  }

  for i := range v.s {
    if !v.s[i].Equal(rhs.s[i]) {
      return false
    }
  }

  return true
}

func (v *RecipientsCollection) MarshalJSON() ([]byte, error) {
  return json.Marshal(v.s)
}

func (v *RecipientsCollection) UnmarshalJSON(data []byte) error {
  return json.Unmarshal(data, &v.s)
}

func (v *RecipientsCollection) Copy(rhs *RecipientsCollection) {
  v.s = make([]*Recipients, len(rhs.s))
  copy(v.s, rhs.s)
}

func (v *RecipientsCollection) Clone() *RecipientsCollection {
  return &RecipientsCollection{
    s: v.s[:],
  }
}

func (v *RecipientsCollection) Index(rhs *Recipients) int {
  for i, lhs := range v.s {
    if lhs == rhs {
      return i
    }
  }
  return -1
}

func (v *RecipientsCollection) Insert(i int, n *Recipients) {
  if i < 0 || i > len(v.s) {
    fmt.Printf("Vapi::RecipientsCollection field_values.go error trying to insert at index %d\n", i)
    return
  }
  v.s = append(v.s, nil)
  copy(v.s[i+1:], v.s[i:])
  v.s[i] = n
}

func (v *RecipientsCollection) Remove(i int) {
  if i < 0 || i >= len(v.s) {
    fmt.Printf("Vapi::RecipientsCollection field_values.go error trying to remove bad index %d\n", i)
    return
  }
  copy(v.s[i:], v.s[i+1:])
  v.s[len(v.s)-1] = nil
  v.s = v.s[:len(v.s)-1]
}

func (v *RecipientsCollection) Count() int {
  return len(v.s)
}

func (v *RecipientsCollection) At(i int) *Recipients {
  if i < 0 || i >= len(v.s) {
    fmt.Printf("Vapi::RecipientsCollection field_values.go invalid index %d\n", i)
  }
  return v.s[i]
}

